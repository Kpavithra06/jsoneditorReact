{"version":3,"file":"index.js","sources":["../src/Editor.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport JSONEditor from 'jsoneditor/dist/jsoneditor-minimalist';\r\nimport 'jsoneditor/dist/jsoneditor.css';\r\nimport './fixAce.css';\r\n\r\n/**\r\n * @typedef {{\r\n * tree: string,\r\n * view: string,\r\n * form: string,\r\n * code: string,\r\n * text: string,\r\n * allValues: Array<string>\r\n * }} TJsonEditorModes\r\n */\r\nconst modes = {\r\n    tree: 'tree',\r\n    view: 'view',\r\n    form: 'form',\r\n    code: 'code',\r\n    text: 'text'\r\n};\r\n\r\nconst values = Object.values(modes);\r\n\r\nmodes.allValues = values;\r\n\r\n/**\r\n * @type {object}\r\n * @property {object} [value]\r\n * @property {string} [mode='tree'] - Set the editor mode.\r\n * @property {string} [name=undefined] - Initial field name for the root node\r\n * @property {object} [schema] - Validate the JSON object against a JSON schema.\r\n * @property {object} [schemaRefs] - Schemas that are referenced using\r\n * the $ref property\r\n * @property {Function} [onChange] - Set a callback function\r\n * triggered when json in the JSONEditor change.\r\n * Will only be triggered on changes made by the user.\r\n * @property {Function} [onError] - Set a callback function triggered when an error occurs.\r\n * Invoked with the error as first argument.\r\n * The callback is only invoked for errors triggered by a users action,\r\n * like switching from code mode to tree mode or clicking\r\n * the Format button whilst the editor doesn't contain valid JSON.\r\n * @property {Function} [onModeChange] - Set a callback function\r\n * triggered right after the mode is changed by the user.\r\n * @property {object} [ace] - Provide a version of the Ace editor.\r\n * Only applicable when mode is code\r\n * @property {object} [ajv] - Provide a instance of ajv,\r\n * the library used for JSON schema validation.\r\n * @property {string} [theme] - Set the Ace editor theme,\r\n * uses included 'ace/theme/jsoneditor' by default.\r\n * @property {boolean} [history=false] - Enables history,\r\n * adds a button Undo and Redo to the menu of the JSONEditor. Only applicable when\r\n * mode is 'tree' or 'form'\r\n * @property {boolean} [navigationBar=true] - Adds navigation bar to the menu\r\n * the navigation bar visualize the current position on the\r\n * tree structure as well as allows breadcrumbs navigation.\r\n * @property {boolean} [statusBar=true] - Adds status bar to the buttom of the editor\r\n * the status bar shows the cursor position and a count of the selected characters.\r\n * Only applicable when mode is 'code' or 'text'.\r\n * @property {boolean} [search=true] - Enables a search box in\r\n * the upper right corner of the JSONEditor.\r\n * @property {Array<string>} [allowedModes] - Create a box in the editor menu where\r\n * the user can switch between the specified modes.\r\n * @property {(string|PropTypes.elementType)} [tag='div'] - Html element, or react element to render\r\n * @property {object} [htmlElementProps] - html element custom props\r\n * @property {Function} [innerRef] - callback to get html element reference\r\n * @property {boolean} [sortObjectKeys=false] If true, object keys in 'tree',\r\n * 'view' or 'form' mode list be listed alphabetically instead by their insertion order..\r\n */\r\nexport default class Editor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.htmlElementRef = null;\r\n        this.jsonEditor = null;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setRef = this.setRef.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.focus = this.focus.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            allowedModes,\r\n            innerRef,\r\n            htmlElementProps,\r\n            tag,\r\n            onChange,\r\n            ...rest\r\n        } = this.props;\r\n\r\n        this.createEditor({\r\n            ...rest,\r\n            modes: allowedModes\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line react/sort-comp\r\n    componentDidUpdate({\r\n        allowedModes,\r\n        schema,\r\n        name,\r\n        theme,\r\n        schemaRefs,\r\n        innerRef,\r\n        htmlElementProps,\r\n        tag,\r\n        onChange,\r\n        ...rest\r\n    }) {\r\n        if (this.jsonEditor) {\r\n            if (theme !== this.props.theme) {\r\n                this.createEditor({\r\n                    ...rest,\r\n                    theme,\r\n                    modes: allowedModes\r\n                });\r\n            } else {\r\n                if (schema !== this.props.schema\r\n                    || schemaRefs !== this.props.schemaRefs\r\n                ) {\r\n                    this.jsonEditor.setSchema(schema, schemaRefs);\r\n                }\r\n\r\n                if (name !== this.jsonEditor.getName()) {\r\n                    this.jsonEditor.setName(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate({ htmlElementProps }) {\r\n        return htmlElementProps !== this.props.htmlElementProps;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.destroy();\r\n            this.jsonEditor = null;\r\n        }\r\n    }\r\n\r\n    setRef(element) {\r\n        this.htmlElementRef = element;\r\n        if (this.props.innerRef) {\r\n            this.props.innerRef(element);\r\n        }\r\n    }\r\n\r\n    createEditor({ value, ...rest }) {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.destroy();\r\n        }\r\n\r\n        this.jsonEditor = new JSONEditor(this.htmlElementRef, {\r\n            onChange: this.handleChange,\r\n            ...rest\r\n        });\r\n\r\n        this.jsonEditor.set(value);\r\n    }\r\n\r\n    handleChange() {\r\n        if (this.props.onChange) {\r\n            try {\r\n                this.err = null;\r\n                const text = this.jsonEditor.getText();\r\n                if (text === '') {\r\n                    this.props.onChange(null);\r\n                }\r\n\r\n                const currentJson = this.jsonEditor.get();\r\n                if (this.props.value !== currentJson) {\r\n                    this.props.onChange(currentJson);\r\n                }\r\n            } catch (err) {\r\n                this.err = err;\r\n            }\r\n        }\r\n    }\r\n\r\n    collapseAll() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.collapseAll();\r\n        }\r\n    }\r\n\r\n    expandAll() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.expandAll();\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        if (this.jsonEditor) {\r\n            this.jsonEditor.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            htmlElementProps,\r\n            tag\r\n        } = this.props;\r\n\r\n        return React.createElement(\r\n            tag,\r\n            {\r\n                ...htmlElementProps,\r\n                ref: this.setRef\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nEditor.propTypes = {\r\n    //  jsoneditor props\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.array,\r\n        PropTypes.string,\r\n        PropTypes.bool,\r\n        PropTypes.number,\r\n    ]),\r\n    mode: PropTypes.oneOf(values),\r\n    name: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    schemaRefs: PropTypes.object,\r\n    sortObjectKeys: PropTypes.bool,\r\n\r\n    onChange: PropTypes.func,\r\n    onError: PropTypes.func,\r\n    onModeChange: PropTypes.func,\r\n\r\n    ace: PropTypes.object,\r\n    ajv: PropTypes.object,\r\n    theme: PropTypes.string,\r\n    history: PropTypes.bool,\r\n    navigationBar: PropTypes.bool,\r\n    statusBar: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    allowedModes: PropTypes.arrayOf(PropTypes.oneOf(values)),\r\n\r\n    //  custom props\r\n    tag: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\r\n    htmlElementProps: PropTypes.object,\r\n    innerRef: PropTypes.func,\r\n};\r\n\r\nEditor.defaultProps = {\r\n    tag: 'div',\r\n    mode: modes.tree,\r\n    history: false,\r\n    search: true,\r\n    navigationBar: true,\r\n    statusBar: true,\r\n    sortObjectKeys: false,\r\n};\r\n\r\n/**\r\n * @type TJsonEditorModes\r\n */\r\nEditor.modes = modes;\r\n"],"names":["modes","tree","view","form","code","text","values","Object","allValues","Editor","Component","constructor","props","htmlElementRef","jsonEditor","handleChange","bind","setRef","collapseAll","expandAll","focus","componentDidMount","allowedModes","innerRef","htmlElementProps","tag","onChange","rest","createEditor","componentDidUpdate","schema","name","theme","schemaRefs","setSchema","getName","setName","shouldComponentUpdate","componentWillUnmount","destroy","element","value","JSONEditor","set","err","getText","currentJson","get","render","React","createElement","ref","propTypes","PropTypes","oneOfType","object","array","string","bool","number","mode","oneOf","sortObjectKeys","func","onError","onModeChange","ace","ajv","history","navigationBar","statusBar","search","arrayOf","elementType","defaultProps"],"mappings":"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"}